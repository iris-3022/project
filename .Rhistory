scale_fill_brewer(palette = "Dark2")
## RNASeq expressions
expressionsTCGA(BRCA.rnaseq,
extract.cols = "VENTX|27287") %>%
rename(cohort = dataset,
VENTX = `VENTX|27287`) %>%
filter(substr(bcr_patient_barcode, 14, 15) == "01") %>% #cancer samples
ggplot(aes(y = log1p(VENTX),
x = reorder(cohort, log1p(VENTX), median),
fill = cohort)) +
geom_boxplot() +
theme_RTCGA() +
scale_fill_brewer(palette = "Dark2")
library(RTCGA)
library(RTCGA.mutations)
library(RTCGA.rnaseq)
library(RTCGA.clinical)
library(RTCGA.mRNA)
library(RTCGA.miRNASeq)
library(RTCGA.RPPA)
library(RTCGA.CNV)
library(RTCGA.methylation)
library(RTCGA.PANCAN12)
## mRNA expressions
expressionsTCGA(BRCA.mRNA, COAD.mRNA, LUSC.mRNA, UCEC.mRNA,
extract.cols = c("ARHGAP24", "TRAV20"))
## mRNA expressions
expressionsTCGA(BRCA.mRNA, COAD.mRNA, LUSC.mRNA, UCEC.mRNA,
extract.cols = c("ARHGAP24", "TRAV20")) %>%
rename(cohort = dataset)
## RNASeq expressions
expressionsTCGA(BRCA.rnaseq, OV.rnaseq, HNSC.rnaseq,
extract.cols = "VENTX|27287") %>%
rename(cohort = dataset, VENTX = `VENTX|27287`)
?rename
expressionsTCGA(BRCA.rnaseq, OV.rnaseq, HNSC.rnaseq,
extract.cols = "VENTX|27287") %>%
# rename(cohort = dataset, VENTX = `VENTX|27287`) %>%
filter(substr(bcr_patient_barcode, 14, 15) == "01")
expressionsTCGA
?expressionsTCGA
expressionsTCGA(BRCA.mRNA, COAD.mRNA, LUSC.mRNA, UCEC.mRNA,
extract.cols = c("ARHGAP24", "TRAV20")) %>%
rename(cohort = dataset)
BiocManager::install("TCGAbiolinks")
library(TCGAbiolinks)
library(dplyr)
library(DT)
packageVersion("TCGAbiolinks")
df = read.csv("/Users/jing/Desktop/Book1.csv")
df = read.csv("/Users/jing/Desktop/Book1.csv", sep = ";")
heaad(df)
head(df)
summary(df)
df$RB1
levels(df$RB1)
df = read.csv("/Users/jing/Desktop/Book1.csv", sep = ";", stringsAsFactors = T)
df = read.csv("/Users/jing/Desktop/Book1.csv", sep = ";", stringsAsFactors = F)
levels(df$RB1)
levels(df$RB1)
unique(df$RB1)
unique(df$RB2)
tmp = lapply(colnames(df), function(zz) unique(df[,zz]))
tmp
tmp
tmp %>% unlist %>% unique
library(dplyr)
tmp %>% unlist %>% unique
x = tmp %>% unlist %>% unique
summary(tmp[,"RB1"])
summary(df[,"RB1"])
table(df[,"RB1"])
as.data.frame.matrix(table(df[,"RB1"]))
as.data.frame.matrix((df[,"RB1"]))
as.data.frame(table(df[,"RB1"]))
as.data.frame(table(df[,"RB2"]))
df2 = lapply(colnames(df), function(zz) df[,zz] = factor(df[,zz], levels = x))
df2
df2 = apply(df, 2, factor, levels = x)
df2 = apply(df, 2, factor, levels = x) %>% as.data.frame()
as.data.frame(table(df[,"RB1"]))
as.data.frame(table(df[,"RB2"]))
as.data.frame(table(df2[,"RB1"]))
as.data.frame(table(df2[,"RB2"]))
df2
df2$RB1
df2$RB2
df2 = lapply(colnames(df), function(zz) df[,zz] = factor(df[,zz], levels = x))
df2 = apply(df, 2, as.factor, levels = x) %>% as.data.frame()
?factor
df2 = apply(df, 2, factor, levels = x) %>% as.data.frame()
df2$RB2
x
df$RB1
df$RB1 = factor(df$RB1, levels = x)
df$RB1
df2 = lapply(colnames(df), function(zz) df[,zz] = factor(df[,zz], levels = x))
df2 = lapply(colnames(df), function(zz) df[,zz] = factor(df[,zz], levels = x)) %>% as.data.frame()
as.data.frame(table(df2[,"RB1"]))
df2$structure.c.1L..1L..1L..1L..1L..1L..1L..1L..1L..1L..1L..1L..1L..
colnames(df2) = colnames(df)
as.data.frame(table(df2[,"RB1"]))
as.data.frame(table(df2[,"RB2"]))
as.data.frame(table(df2[,"RB1"]))
as.data.frame(table(df2[,"RB2"]))
df2l = lapply(colnames(df), function(zz) df[,zz] = factor(df[,zz], levels = x))
df2l
xxxx = Reduce(cbind, df2l)
names(df2l) = colnames(df)
xxxx = Reduce(cbind.data.frame, lapply(df2l, table))
View(xxxx)
lapply(colnames(df), function(zz) as.data.frame(table(df2[,zz])))
y = lapply(colnames(df), function(zz) as.data.frame(table(df2[,zz])))
xxxx = Reduce(cbind.data.frame, y)
View(xxxx)
as.data.frame(table(df2[,"RB2"]))
as.data.frame(table(df2[,"RB2"]))[,"Freq"]
y = lapply(colnames(df), function(zz) as.data.frame(table(df2[,zz]))[,"Freq"] )
View(y)
xxxx = Reduce(cbind.data.frame, y)
View(xxxx)
out = Reduce(cbind.data.frame, y)
colnames(out) = colnames(df)
rownames(out) = x
View(out)
load("/Volumes/LaCie/Work/Database/Retinoblastoma/DataCancerCell/group102.RData")
out = out %>% t %>% as.data.frame()
View(out)
merge(out, group102, by = "row.names")
out2 = merge(out, group102, by = "row.names")
View(out2)
out2 = merge(out, group102, by = "row.names") %>% arrange(FinalGroup)
View(out2)
out2 = merge(out, group102, by = "row.names") %>% arrange(FinalGroupMYCN)
View(out2)
out2 = merge(out, group102, by = "row.names") %>% arrange(FinalGroupMYCN, desc(normal))
View(out2)
write.table(out2, file = "/Users/jing/Downloads/stat_tables2.csv", sep=";", col.names = NA)
load("/Volumes/LaCie/Work/Retinoblastoma/8_Other/Stem_Indice/mRNAsi/predict_2020/results/centered/df.i_stem_indice_mRNA_centered_annot.RData")
colnames(df.i)
colnames(df.i)[8:17]
lapply(colnames(df.i)[8:17], function(zz) cor(df.i$stem_indice, df.i[,zz], method = "spearman"))
lapply(colnames(df.i)[8:17], function(zz) cor.test(df.i$stem_indice, df.i[,zz], method = "spearman")$p.value )
rho = sapply(colnames(df.i)[8:17], function(zz) cor(df.i$stem_indice, df.i[,zz], method = "spearman"))
p = sapply(colnames(df.i)[8:17], function(zz) cor.test(df.i$stem_indice, df.i[,zz], method = "spearman")$p.value )
p
rho
dfout = as.data.frame(rho, df)
View(dfout)
dfout = cbind.data.frame(rho, df)
View(dfout)
dfout = cbind(rho, df)
View(dfout)
rho
dfout = cbind(as.data.frame(rho), as.data.frame(df))
dfout = cbind(as.data.frame(rho), as.data.frame(p))
dfout = cbind(rho, p)
View(dfout)
dfout = cbind.data.frame(rho, p)
View(dfout)
library(dplyr)
dfout = cbind.data.frame(rho, p) %>% arrange(rho)
View(dfout)
write.table(dfout, file="/Users/jing/Desktop/mcp cor.csv", sep=";")
write.table(dfout, file="/Users/jing/Desktop/mcp cor.csv", sep=";", col.names = NA)
devtools::install_github(repo = "mojaveazure/loomR", ref = "develop")
library(loomR)
load("/Volumes/LaCie/Work/Retinoblastoma/7_SingleCellRNAseq/seurat/v3_20200309/results/RB_SC11/nFeature_300_12500_nCount_2000_3e+05_percent.mt_20/logNorm_regress_MT_diffSG2/nPC_20/srobj_logNorm_regress_MT_diffSG2_nPC.20_res.0.6.RData")
srobj.loom <- as.loom(srobj, filename = "/Volumes/LaCie/Work/Retinoblastoma/7_SingleCellRNAseq/seurat/v3_20200309/results/RB_SC11/nFeature_300_12500_nCount_2000_3e+05_percent.mt_20/logNorm_regress_MT_diffSG2/nPC_20/srobj_logNorm_regress_MT_diffSG2_nPC.20_res.0.6.loom", verbose = FALSE)
library(loomR)
srobj.loom <- as.loom(srobj, filename = "/Volumes/LaCie/Work/Retinoblastoma/7_SingleCellRNAseq/seurat/v3_20200309/results/RB_SC11/nFeature_300_12500_nCount_2000_3e+05_percent.mt_20/logNorm_regress_MT_diffSG2/nPC_20/srobj_logNorm_regress_MT_diffSG2_nPC.20_res.0.6.loom", verbose = FALSE)
?as.loom
library(Seurat)
as.loom
srobj.loom <- as.loom(x = srobj,
assay = "RNA",
filename = "/Volumes/LaCie/Work/Retinoblastoma/7_SingleCellRNAseq/seurat/v3_20200309/results/RB_SC11/nFeature_300_12500_nCount_2000_3e+05_percent.mt_20/logNorm_regress_MT_diffSG2/nPC_20/srobj_logNorm_regress_MT_diffSG2_nPC.20_res.0.6.loom", verbose = FALSE)
library(Seurat)
shiny::runApp('Downloads/sc')
?UMAPPlot
load("/Users/jing/Downloads/sc/data/srobj_RBSC11.RData")
UMAPPlot(srobj, features = g.i)
UMAPPlot(srobj, features = "CRX")
UMAPPlot(srobj, features = "CRX")
FeaturePlot(srobj, features = "CRX")
FeaturePlot(srobj, features = "CRX", cols = c("grey", "red"))
runApp('Downloads/sc')
runApp('Downloads/sc')
runApp('Downloads/sc')
runApp('Downloads/sc')
runApp('Downloads/sc')
runApp('Downloads/sc')
load("/Users/jing/Downloads/sc/data/RB_SC11_nPC20.RData")
srobj@meta.data
UMAPPlot(srobj)
srobjv3 = UpdateSeuratObject(srobj)
UMAPPlot(srobj)
UMAPPlot(srobjv3)
TSNEPlot(srobjv3)
FeaturePlot(srobjv3, features = g.i(), cols = c("grey", "red"))
FeaturePlot(srobjv3, features = "CRX", cols = c("grey", "red"))
getwd()
save("srobj_RBSC11_v2tov3.RData")
srobj = UpdateSeuratObject(srobj)
save(srobj, "srobj_RBSC11_v2tov3.RData")
save(srobj, file = "srobj_RBSC11_v2tov3.RData")
saveRDS(srobj, file = "srobj_RBSC11_v2tov3.Rds")
runApp('Downloads/sc')
?TSNEPlot
TSNEPlot(srobjv3, label=T)
srobj$orig.ident
Idents(srobj)
new.cluster.ids <- c("CRX+ARR3-EBF3+", "CRX+ARR3+EBF3-", "CRX+ARR3-EBF3+MKI67+", "HSP+BNIP3+", "CRX+ARR3+EBF3-MKI67+",
"monocyte", "T cells")
names(new.cluster.ids) <- levels(srobj)
srobj <- RenameIdents(srobj, new.cluster.ids)
saveRDS(srobj, file = "/Users/jing/Downloads/sc/data/srobj_RBSC11_v2tov3.Rds")
TSNEPlot(srobj, label=T)
TSNEPlot(srobj, label=T) + NoLegend()
runApp('Downloads/sc')
library(rsconnect)
rsconnect::deployApp('/Users/jing/Desktop/RBSC11')
install.packages("Rmagic")
library(Rmagic)
library(ggplot2)
data(magic_testdata)
MAGIC_data <- magic(magic_testdata, genes=c("VIM", "CDH1", "ZEB1"))
all = readLines("/Users/jing/Desktop/alldata.txt")
fichier = readLines("/Users/jing/Desktop/fichier.txt")
intersect(all, fichier)
x = intersect(all, fichier)
y = setdiff(all, fichier)
y
all = readLines("/Users/jing/Desktop/alldata.txt")
fichier = readLines("/Users/jing/Desktop/fichier.txt")
x = intersect(all, fichier)
y = setdiff(all, fichier)
y
install.packages("devtools")
devtools::install_local("PATH/TO/DIRECTORY/CytoTRACE_0.3.3.tar.gz")
devtools::install_local("/Users/jing/Downloads/CytoTRACE_0.3.3.tar.gz")
devtools::install_local("/Volumes/LaCie/Work/Tools/CytoTRACE/CytoTRACE_0.3.3.tar.gz")
devtools::install_local("/Volumes/LaCie/Work/Tools/CytoTRACE/CytoTRACE_0.3.3.tar.gz")
.libPaths()
old_packages <- installed.packages(lib.loc = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
head(old_packages[, 1])
new_packages <- installed.packages()
missing_df <- as.data.frame(old_packages[
!old_packages[, "Package"] %in% new_packages[, "Package"],
])
View(missing_df)
install.packages(missing_df$Package)
# verify what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
View(missing_df)
# install the missing packages
install.packages(missing_df$Package)
# verify what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
View(missing_df)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
missing_df$Package
BiocManager::install(missing_df$Package)
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
View(missing_df)
install.packages("rgl")
install.packages("/Volumes/LaCie/Work/Tools/CIT/cit.utils.tar.gz", repos = NULL, type = "source")
install.packages("/Volumes/LaCie/Work/Tools/CIT/cit.bioAnnot.tar.gz", repos = NULL, type = "source")
install.packages("/Volumes/LaCie/Work/Tools/CIT/cit.bioUtils.tar.gz", repos = NULL, type = "source")
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
View(missing_df)
install.packages("/Volumes/LaCie/Work/Tools/CIT/cit.supervised.tar.gz", repos = NULL, type = "source")
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
View(missing_df)
install.packages("/Volumes/LaCie/Work/Tools/CIT/cit.functional.tar.gz", repos = NULL, type = "source")
install.packages("/Volumes/LaCie/Work/Tools/CIT/cit.unsupervised.tar.gz", repos = NULL, type = "source")
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
View(missing_df)
install.packages("hdf5r")
# install other packages not in CRAN or biocondutor
devtools::install_github(repo = "hhoeflin/hdf5r")
devtools::install_github(repo = "mojaveazure/loomR", ref = "develop")
devtools::install_github(repo = "mojaveazure/loomR", ref = "develop")
# DoubletFinder
remotes::install_github('chris-mcginnis-ucsf/DoubletFinder')
install_github("immunogenomics/harmony")
# harmony
library(devtools)
install_github("immunogenomics/harmony")
# harmony
devtools::install_github("immunogenomics/harmony")
install.packages("/Volumes/LaCie/Work/Tools/CIT/MCPcounter_1.1.0.tar.gz", repos = NULL, type = "source")
install.packages("/Volumes/LaCie/Work/Tools/CIT/MCPcounter_1.1.0.tar.gz", repos = NULL, type = "source")
# harmony
devtools::install_github("immunogenomics/harmony")
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
# monocle3
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/monocle3')
devtools::install_github("cit-bioinfo/WISP")
#
devtools::install_github("aertslab/SCopeLoomR", build_vignettes = TRUE)
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
devtools::install_github("cit-bioinfo/WISP")
devtools::install_github("aertslab/SCENIC")
# verify again what packages are still missing.
missing_df <- as.data.frame(old_packages[
!old_packages[, 1] %in% installed.packages()[, 1],
])
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
devtools::install_github('cole-trapnell-lab/monocle3')
install.packages("sf") # no compile
# monocle3
# install gdal and sf first
# brew install pkg-config
# brew install gdal
install.packages("rgdal", configure.args = c("--with-proj-lib=/usr/local/lib/", "--with-proj-include=/usr/local/include/"))
# harmony
devtools::install_github("immunogenomics/harmony")
install.packages("RcppArmadillo")
# harmony
devtools::install_github("immunogenomics/harmony")
RcppArmadillo::armadillo_version(single = F)
devtools::install_github('satijalab/seurat-data')
library(Seurat)
library(SeuratData)
library(patchwork)
# install dataset
InstallData("ifnb")
# install dataset
InstallData("ifnb")
library(Seurat)
library(SeuratData)
library(patchwork)
# install dataset
InstallData("ifnb")
devtools::install_github('satijalab/seurat-wrappers')
library(Seurat)
library(SeuratData)
library(patchwork)
library(SeuratWrappers)
# install dataset
InstallData("ifnb")
install.packages("download.dir/ifnb.SeuratData_3.1.0.tar.gz", repos = NULL, type = "source")
library(SeuratData)
library(SeuratData)
AvailableData()
AvailableData()
InstallData("ifnb")
library(RBsubtyping)
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
#### after writing functions or importing data, document and install the package
# document
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
devtools::document()
devtools::install("RBsubtyping")
library(RBsubtyping)
# install packages
setwd("/Users/jing/Desktop/myRpackage")
#### after writing functions or importing data, document and install the package
# document
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
devtools::document()
# install packages
setwd("/Users/jing/Desktop/myRpackage")
devtools::install("RBsubtyping")
library(RBsubtyping)
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
#### after writing functions or importing data, document and install the package
# document
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
devtools::document()
# install packages
setwd("/Users/jing/Desktop/myRpackage")
devtools::install("RBsubtyping")
library(RBsubtyping)
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
#### after writing functions or importing data, document and install the package
# document
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
devtools::document()
# install packages
setwd("/Users/jing/Desktop/myRpackage")
devtools::install("RBsubtyping")
library(RBsubtyping)
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
colnames(tff1_initial)
colnames(tff1_metastasis)
tff1.1 <- tff1_initial[, c("ID", "subtype", "TFF1_QS")]
tff1.2 <- tff1_metastasis[, c("ID", "metastatic", "TFF1_QS_tumor")]
colnames(tff1.1) <- colnames(tff1.2 ) <- c("ID", "annot", "TFF1_QS")
tff1 <- rbind.data.frame(tff1.1, tff1.2)
tff1[which(tff1$annot == "yes"), "annot"] <- "Metastatic"
tff1[which(tff1$annot == "No"), "annot"] <- "Non metastatic"
tff1[which(tff1$annot == "1"), "annot"] <- "Subtype 1"
tff1[which(tff1$annot == "2"), "annot"] <- "Subtype 2"
tff1$series <- c(rep("Intial series", nrow(tff1.1)), rep("HPRF series", nrow(tff1.2)) )
dev.new()
ggboxplot(tff1, x="annot", y="TFF1_QS", facet.by = "series",
color="annot", palette = c("goldenrod", "cornflowerblue", "black", "grey"),
add = "jitter" )
ggboxplot(tff1, x="annot", y="TFF1_QS",
xlab = "",
legend.title = "",
x.text.angle = 30,
color="annot", palette = c("goldenrod", "cornflowerblue", "black", "grey"),
add = "jitter") +
geom_hline(yintercept = 50,
linetype = 2)
ggboxplot(tff1, x="annot", y="TFF1_QS",
xlab = "",
legend.title = "",
x.text.angle = 30,
color="annot", palette = c("goldenrod", "cornflowerblue", "black", "grey"),
add = "jitter") +
geom_hline(yintercept = 50,
linetype = 2)
ggboxplot(tff1, x="annot", y="TFF1_QS", facet.by = "series",
color="annot", palette = c("goldenrod", "cornflowerblue", "black", "grey"),
add = "jitter" )
#### after writing functions or importing data, document and install the package
# document
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
devtools::document()
# install packages
setwd("/Users/jing/Desktop/myRpackage")
devtools::install("RBsubtyping")
library(RBsubtyping)
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
tff1
View(tff1)
#### after writing functions or importing data, document and install the package
# document
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
devtools::document()
# install packages
setwd("/Users/jing/Desktop/myRpackage")
devtools::install("RBsubtyping")
library(RBsubtyping)
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
################### test run Fig 6
setwd("/Users/jing/Desktop/myRpackage/test/fig6")
Figure6c()
library(gtools)
library(dplyr)
library(ggpubr)
library(gplots)
library(ape)
library(corrplot)
library(GLAD)
library(RColorBrewer)
library(ComplexHeatmap)
library(circlize)
#### directories
dir_data <- "/Volumes/LaCie/Work/Retinoblastoma/00_CancerCell/Figure_NanoString/NanoString_organoids_tumors/V20181016/data"
# Data for Fig3 nanostring
nano.exp <- read.table("/Users/jing/Desktop/myRpackage/preparedata_RBsubtyping/nanostring_expdata.csv")
View(nano.exp)
# Data for Fig3 nanostring
nano.exp <- read.table("/Users/jing/Desktop/myRpackage/preparedata_RBsubtyping/nanostring_expdata.csv", sep = ";")
View(nano.exp)
# Data for Fig3 nanostring
nano.exp <- read.table("/Users/jing/Desktop/myRpackage/preparedata_RBsubtyping/nanostring_expdata.csv", sep = ";", header = T)
View(nano.exp)
# Data for Fig3 nanostring
nano.exp <- read.table("/Users/jing/Desktop/myRpackage/preparedata_RBsubtyping/nanostring_expdata.csv", sep = ";", header = T)
usethis::use_data(nano.exp)
#### import data
setwd("/Users/jing/Desktop/myRpackage/RBsubtyping")
usethis::use_data(nano.exp)
nano.exp
